{"version":3,"sources":["components/Jumbotron/jumbotron.js","components/Search/search.js","components/Row/row.js","components/Table/table.js","utils/API.js","App.js","index.js"],"names":["Jumbotron","className","Search","props","value","search","onChange","handleInputChange","type","placeholder","Row","name","email","image","phone","dob","src","Table","scope","onClick","sortByName","data-value","sort","aria-hidden","users","map","user","Promise","resolve","reject","axios","get","then","res","results","data","DOB","date","split","picture","thumbnail","first","last","catch","err","App","useState","setUsers","setSearch","userSearch","setUserSearch","setSort","useEffect","loadUsers","API","console","log","event","target","currentSearch","searchedUsers","filter","includes","searchForUser","sortDir","getAttribute","a","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b65a1b74.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./jumbotron.css\";\n\nfunction Jumbotron() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Employee Directory</h1>\n                <p className=\"lead\">Click on cards to filter by heading or use the search box to narrow your results.</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./search.css\";\n\nfunction Search(props) {\n    return (\n        <div className=\"col-md-4 mb-3 search\">\n            <label>Search for an Employee:</label>\n            <input \n            value={props.search}\n            onChange={props.handleInputChange}\n            type=\"text\" \n            className=\"form-control\" \n            placeholder=\"Search\"></input>\n        </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport \"./row.css\";\n\nfunction Row({ name, email, image, phone, dob }) {\n    return (\n        <tr>\n            <td><img src={image}></img></td>\n            <td>{name}</td>\n            <td>{phone}</td>\n            <td>{email}</td>\n            <td>{dob}</td>\n        </tr>\n    );\n}\n\nexport default Row;","import React from \"react\";\nimport \"./table.css\";\nimport Row from \"../Row/row\";\n\nfunction Table(props) {\n    return (\n        <div>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\">Image</th>\n                        <th scope=\"col\" className=\"sortCol\">\n                            Name \n                            <i onClick={props.sortByName} data-value={props.sort}\n                                className=\"fa fa-sort\" aria-hidden=\"true\"></i>\n                        </th>\n                        <th scope=\"col\">Phone</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">DOB</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.users.map(user => (\n                        <Row\n                            key={user.name}\n                            image={user.image}\n                            name={user.name}\n                            phone={user.phone}\n                            email={user.email}\n                            dob={user.dob}\n                        />\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Table;","import axios from \"axios\";\n\nexport default {\n    getUsers: function () {\n        return new Promise((resolve, reject) => {\n            axios.get(\"https://randomuser.me/api/?results=50\").then((res) => {\n                const users = res.data.results;\n                const results = users.map((user) => {\n                const DOB = user.dob.date.split('T');\n                    return {\n                        image: user.picture.thumbnail,\n                        name: `${user.name.first} ${user.name.last}`,\n                        phone: user.phone,\n                        email: user.email,\n                        dob: DOB[0]\n                    };\n                });\n                resolve(results);\n            }).catch((err) => reject(err));\n        });\n    },\n};\n\n\n","import React, { useEffect, useState } from \"react\";\nimport Jumbotron from \"./components/Jumbotron/jumbotron\";\nimport Search from \"./components/Search/search\";\nimport Table from \"./components/Table/table\";\nimport API from \"./utils/API\";\n\n\nfunction App() {\n\n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [userSearch, setUserSearch] = useState([]);\n  const [sort, setSort] = useState(\"\");\n\n  useEffect(() => {\n    loadUsers()\n  }, []);\n\n  // Getting all users and allowing for search\n  const loadUsers = () => {\n    API.getUsers()\n      .then((users) => {\n        setUsers(users);\n        setUserSearch(users);\n      })\n      .catch(err => console.log(err));\n  };\n\n  // Sorting by Name\n  const sortByName = (event) => {\n    let sortDir = event.target.getAttribute(\"data-value\");\n    if (sortDir === \"ascending\") {\n      setUsers(users.sort((a, b) => (a.name < b.name ? 1 : -1)));\n      setSort(\"descending\");\n    } else if (sortDir === \"descending\") {\n      setUsers(users.sort((a, b) => (a.name > b.name ? 1 : -1)));\n      setSort(\"ascending\");\n    } else {\n      setUsers(users.sort((a, b) => (a.name > b.name ? 1 : -1)));\n      setSort(\"ascending\");\n    }\n  }\n\n  // Search for Users\n  const searchForUser = (currentSearch) => {\n    const searchedUsers = users.filter(\n      user => {\n        if (user.name.includes(currentSearch)) {\n          return user;\n        }\n      }\n    )\n    setUserSearch(searchedUsers);\n  };\n\n  // Input change\n  const handleInputChange = event => {\n    setSearch(event.target.value);\n    searchForUser(event.target.value);\n  };\n\n  return (\n    <div>\n      <Jumbotron />\n      <Search\n        handleInputChange={handleInputChange}\n        results={search}\n      />\n      <Table\n        users={userSearch}\n        sortByName={sortByName}\n        sort={sort}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}